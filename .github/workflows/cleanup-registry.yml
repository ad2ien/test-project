name: Cleanup Registry

on:
  workflow_dispatch:
jobs:
  cleanup-ghcr:
    runs-on: ubuntu-20.04
    env:
      GH_TOKEN: ${{ secrets.REGISTRY_TOKEN }}
    steps:
      # - name: Retrieve packages
      #   id: get_packages
      #   run: |
      #     echo "Retrieve packages"
      #     PACKAGES=$(curl -s \
      #     -H "Accept: application/vnd.github.v3+json" \
      #     -H "Authorization: Bearer $GH_TOKEN" \
      #     https://api.github.com/users/hleonardtek/packages?package_type=container \
      #     | jq '[.[] | .name]')
      #     echo $PACKAGES
      #     PACKAGES2=${{ toJSON($PACKAGES) }}
      #     echo "::set-output name=packages::$PACKAGES2"
      - name: Retrieve packages
        id: get_packages
        run: |
          PACKAGES=$(gh api \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer $GH_TOKEN" \
          "/users/hleonardtek/packages?package_type=container" \
          -q '[.[] | .name]')
          echo $PACKAGES
          echo "::set-output name=packages::$PACKAGES"
      - name: Print packages
        run: |
          echo "Display output"
          echo ${{ steps.get_packages.outputs.packages }}
      # - name: Cleanup ghcr.io
      #   uses: smartsquaregmbh/delete-old-packages@v0.5.0
      #   with:
      #     token: ${{ secrets.GH_TOKEN }}
      #     user: hleonardtek
      #     type: container
      #     keep: 1
      #     # version-pattern: "^(pr|feat|fix|chore|ci|style|docs|refactor)-.*$"
      #     names: |
      #       ${{ steps.get_packages.outputs.packages }}
  # cleanup:
  #   runs-on: ubuntu-20.04
  #   steps:
  #     # - name: Get Repo List
  #     #   id: repo
  #     #   uses: yi-Xu-0100/repo-list-generator@v1.0.1
  #     - uses: smartsquaregmbh/delete-old-packages@v0.5.0
  #       with:
  #         token: ${{ secrets.REGISTRY_TOKEN }}
  #         user: ad2ien
  #         keep: 1
  #         type: container
  #           # ${{steps.repo.outputs.repoList}}
  #         names: |
  #           ${{ inputs.names }}
